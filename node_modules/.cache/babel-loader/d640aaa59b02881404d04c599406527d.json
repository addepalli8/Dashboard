{"ast":null,"code":"var _jsxFileName = \"/Users/addepalli/Downloads/Exchange/src/components/Exchange/index.js\";\nimport React, { Component } from \"react\"; // import all the necessary subcomponents\n\nimport Loader from '../Loader'; // importing the style from the external css file\n\nimport \"./exchange.css\"; // declaring the type of states and props used\n\nclass Exchange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptoCurrencyList: []\n    }; //  binding all the necessary functions to perform state operations\n\n    this.handleSearchTypeChange = this.handleSearchTypeChange.bind(this);\n  }\n\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://api.coinswitch.co/v2/coins\";\n    fetch(proxyurl + url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': 't41E6v16mG6xqOUK74E2F7Py6UVng4K6n1pO3Jig',\n        'x-user-ip': '1.1.1.1'\n      }\n    }).then(response => response.json()).then(data_list => this.setState(prevState => ({})));\n  } // handling on change for select box in the search area (first name, last name, email)\n\n\n  handleSearchTypeChange(e) {\n    console.log('koko');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Exchange\"));\n  }\n\n}\n\nexport default Exchange;","map":{"version":3,"sources":["/Users/addepalli/Downloads/Exchange/src/components/Exchange/index.js"],"names":["React","Component","Loader","Exchange","constructor","props","state","cryptoCurrencyList","handleSearchTypeChange","bind","componentDidMount","proxyurl","url","fetch","method","headers","then","response","json","data_list","setState","prevState","e","console","log","render"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,OAAO,gBAAP,C,CAGA;;AAOA,MAAMC,QAAN,SAAuBF,SAAvB,CAA+C;AAC7CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE;AADT,KAAb,CAFiB,CAMjB;;AACC,QAAD,CAAYC,sBAAZ,GAAqC,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAArC;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,GAAG,GAAG,oCAAZ;AACAC,IAAAA,KAAK,CAACF,QAAQ,GAAGC,GAAZ,EAAiB;AAClBE,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa,0CAFN;AAGP,qBAAa;AAHN;AAFS,KAAjB,CAAL,CAQKC,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARtB,EASKF,IATL,CASUG,SAAS,IAAI,KAAKC,QAAL,CAAcC,SAAS,KAAG,EAAH,CAAvB,CATvB;AAaD,GA1B4C,CA4B7C;;;AACAb,EAAAA,sBAAsB,CAACc,CAAD,EAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAOD;;AAzC4C;;AA4C/C,eAAetB,QAAf","sourcesContent":["// @flow\n\nimport React, { Component } from \"react\";\n\n// import all the necessary subcomponents\nimport Loader from '../Loader';\n\n// importing the style from the external css file\nimport \"./exchange.css\";\n\n\n// declaring the type of states and props used\ntype Props = {};\ntype State = {\n  cryptoCurrencyList: Array<Object>,\n\n};\n\nclass Exchange extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptoCurrencyList: [],\n    };\n\n    //  binding all the necessary functions to perform state operations\n    (this: any).handleSearchTypeChange = this.handleSearchTypeChange.bind(this);\n  }\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://api.coinswitch.co/v2/coins\";\n    fetch(proxyurl + url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': 't41E6v16mG6xqOUK74E2F7Py6UVng4K6n1pO3Jig',\n          'x-user-ip': '1.1.1.1',\n        },\n        })\n        .then(response => response.json())\n        .then(data_list => this.setState(prevState=>({\n\n          }))\n        );\n  }\n\n  // handling on change for select box in the search area (first name, last name, email)\n  handleSearchTypeChange(e) {\n    console.log('koko');\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          Exchange\n        </div>\n      </div>\n      );\n  }\n}\n\nexport default Exchange;\n"]},"metadata":{},"sourceType":"module"}