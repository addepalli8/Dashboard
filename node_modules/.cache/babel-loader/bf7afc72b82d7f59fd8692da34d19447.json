{"ast":null,"code":"var _jsxFileName = \"/Users/addepalli/Downloads/Exchange/src/components/Exchange/index.js\";\nimport React, { Component } from \"react\"; // import all the necessary subcomponents\n\nimport Loader from '../Loader'; // importing the style from the external css file\n\nimport \"./exchange.css\"; // declaring the type of states and props used\n\nclass Exchange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptoCurrencyList: [],\n      depositValue: 0,\n      destinationValue: 0,\n      depositCoin: '',\n      destinationCoin: ''\n    }; //  binding all the necessary functions to perform state operations\n\n    this.handleSearchTypeChange = this.handleSearchTypeChange.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  componentDidMount() {} // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  // const url = \"https://api.coinswitch.co/v2/coins\";\n  // fetch(proxyurl + url, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Access-Control-Allow-Origin': '*',\n  //       'Content-Type': 'application/json',\n  //       'x-api-key': 't41E6v16mG6xqOUK74E2F7Py6UVng4K6n1pO3Jig',\n  //       'x-user-ip': '1.1.1.1',\n  //     },\n  //     })\n  //     .then(response => response.json())\n  //     .then(data_list => this.setState(prevState=>({\n  //       cryptoCurrencyList: data_list.data.sort(currency=> currency.isActive),\n  //       }))\n  //     );\n  // ----------------------------------------------------\n  // const url1 = \"https://api.coinswitch.co/v2/rate\";\n  // var data = JSON.stringify({\n  //   \"depositCoin\": \"btc\",\n  //   \"destinationCoin\": \"eth\"\n  // });\n  // fetch(proxyurl + url1, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'x-api-key': 't41E6v16mG6xqOUK74E2F7Py6UVng4K6n1pO3Jig',\n  //       'x-user-ip': '1.1.1.1',\n  //     },\n  //     body: data,\n  //     json: true,\n  //     })\n  //     .then(response => response.json())\n  //     .then(data_list => {\n  //       console.log('data_list###', data_list);\n  //     }\n  //     );\n  // handling on change for select box in the search area (first name, last name, email)\n\n\n  handleSearchTypeChange(e) {\n    console.log('koko');\n  }\n\n  onInputChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log('name, value', name, value);\n    this.setState(prevState => ({\n      [name]: value\n    }));\n  }\n\n  render() {\n    // console.log('cryptoCurrencyList', this.state.cryptoCurrencyList);\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"exchange-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"depositValue\",\n      type: \"number\",\n      value: this.state.depositValue,\n      step: \"any\",\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), this.state.cryptoCurrencyList && this.state.cryptoCurrencyList.length ? this.state.cryptoCurrencyList.map(item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"logo\",\n      src: item.logoUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, item.symbol), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, item.name))) : null);\n  }\n\n}\n\nexport default Exchange;","map":{"version":3,"sources":["/Users/addepalli/Downloads/Exchange/src/components/Exchange/index.js"],"names":["React","Component","Loader","Exchange","constructor","props","state","cryptoCurrencyList","depositValue","destinationValue","depositCoin","destinationCoin","handleSearchTypeChange","bind","onInputChange","componentDidMount","e","console","log","name","value","target","setState","prevState","render","width","height","display","justifyContent","alignItems","length","map","item","logoUrl","symbol"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { Component } from \"react\";\n\n// import all the necessary subcomponents\nimport Loader from '../Loader';\n\n// importing the style from the external css file\nimport \"./exchange.css\";\n\n\n// declaring the type of states and props used\ntype Props = {};\ntype State = {\n  cryptoCurrencyList: Array<Object>,\n\n};\n\nclass Exchange extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptoCurrencyList: [],\n      depositValue: 0,\n      destinationValue: 0,\n      depositCoin: '',\n      destinationCoin: '',\n    };\n\n    //  binding all the necessary functions to perform state operations\n    (this: any).handleSearchTypeChange = this.handleSearchTypeChange.bind(this);\n    (this: any).onInputChange = this.onInputChange.bind(this);\n  }\n  componentDidMount() {\n    // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    // const url = \"https://api.coinswitch.co/v2/coins\";\n    // fetch(proxyurl + url, {\n    //     method: 'GET',\n    //     headers: {\n    //       'Access-Control-Allow-Origin': '*',\n    //       'Content-Type': 'application/json',\n    //       'x-api-key': 't41E6v16mG6xqOUK74E2F7Py6UVng4K6n1pO3Jig',\n    //       'x-user-ip': '1.1.1.1',\n    //     },\n    //     })\n    //     .then(response => response.json())\n    //     .then(data_list => this.setState(prevState=>({\n    //       cryptoCurrencyList: data_list.data.sort(currency=> currency.isActive),\n    //       }))\n    //     );\n\n      // ----------------------------------------------------\n\n      // const url1 = \"https://api.coinswitch.co/v2/rate\";\n      // var data = JSON.stringify({\n      //   \"depositCoin\": \"btc\",\n      //   \"destinationCoin\": \"eth\"\n      // });\n      // fetch(proxyurl + url1, {\n      //     method: 'POST',\n      //     headers: {\n      //       'Content-Type': 'application/json',\n      //       'x-api-key': 't41E6v16mG6xqOUK74E2F7Py6UVng4K6n1pO3Jig',\n      //       'x-user-ip': '1.1.1.1',\n      //     },\n      //     body: data,\n      //     json: true,\n      //     })\n      //     .then(response => response.json())\n      //     .then(data_list => {\n      //       console.log('data_list###', data_list);\n      //     }\n      //     );\n  }\n\n  // handling on change for select box in the search area (first name, last name, email)\n  handleSearchTypeChange(e) {\n    console.log('koko');\n  }\n  onInputChange(e) {\n    const { name, value } = e.target;\n    console.log('name, value', name, value);\n    this.setState(prevState=>({\n      [name]: value,\n      }))\n  }\n\n  render() {\n    // console.log('cryptoCurrencyList', this.state.cryptoCurrencyList);\n    return (\n      <div style={{width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n        <div className=\"exchange-container\">\n          <div>\n            <input\n              name=\"depositValue\"\n              type=\"number\"\n              value={this.state.depositValue}\n              step=\"any\"\n              onChange={this.onInputChange}\n            />\n          </div>\n        </div>\n        {this.state.cryptoCurrencyList && this.state.cryptoCurrencyList.length ?\n          this.state.cryptoCurrencyList.map(item => (\n            <div>\n              <img alt=\"logo\" src={item.logoUrl} />\n              <div>{item.symbol}</div>\n              <div>{item.name}</div>\n            </div>\n            ))\n            : null\n        }\n      </div>\n      );\n  }\n}\n\nexport default Exchange;\n"]},"metadata":{},"sourceType":"module"}